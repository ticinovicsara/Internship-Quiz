// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Quiz {
  id String @id @default(uuid())
  title String
  category Category @relation(fields: [categoryId], references: [id])
  categoryId String
  questions Question[]
}

model Question {
  id String @id @default(uuid())
  quiz Quiz @relation(fields: [quizId], references: [id])
  quizId String
  text String
  type QuestionType
  options Json?
  corrAnswer Json?
  userAnswers UserAnswer[]
}

enum QuestionType {
  ABC
  FILL_IN_THE_BLANK
  MATCHING
  SLIDER
  SORT
}

model Category {
  id String @id @default(uuid())
  name String
  quizzes Quiz[]
}

model User {
  id String @id @default(uuid())
  username String @unique
  email String
  password String
  role Role
  scores Score[]
}

enum Role {
  ADMIN
  PLAYER
}

model Score {
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId String
  quiz Quiz @relation(fields: [quizId], references: [id])
  quizId String
  points Int
  createdAt DateTime @default(now())
}

model UserAnswer {
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId String
  question Question @relation(fields: [questionId], references: [id])
  questionId String
  answer Json
  isCorrect Boolean
}